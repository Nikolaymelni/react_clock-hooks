{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","clockName","useState","Date","time","setTime","prevName","setPrevName","useEffect","timerId","window","setInterval","console","info","toUTCString","slice","clearInterval","debug","className","App","setClockName","hasClock","setHasClock","addClock","hideClock","event","preventDefault","document","addEventListener","value","now","toString","getRandomName","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6KAMaA,EAAyB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACvC,EAAwBC,mBAAS,IAAIC,MAArC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCH,mBAASD,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAsBA,OApBAC,qBAAU,WACR,IAAMC,EAAUC,OAAOC,aAAY,WACjCN,EAAQ,IAAIF,MAEZS,QAAQC,MAAK,IAAIV,MAAOW,cAAcC,OAAO,IAAK,MACjD,KAEH,OAAO,WACLL,OAAOM,cAAcP,MAEtB,IAEHD,qBAAU,WACJF,IAAaL,IAEfW,QAAQK,MAAR,qBAA4BhB,IAC5BM,EAAYN,MAEb,CAACA,IAGF,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGjB,IAGH,+BAAO,cAEP,sBAAMiB,UAAU,cAAhB,SACGd,EAAKU,cAAcC,OAAO,IAAK,SC9BjC,IAAMI,EAAgB,WAC3B,MAAkCjB,mBAAS,WAA3C,mBAAOD,EAAP,KAAkBmB,EAAlB,KACA,EAAgClB,oBAAS,GAAzC,mBAAOmB,EAAP,KAAiBC,EAAjB,KAEMC,EAAW,WACfD,GAAY,IAGRE,EAAY,SAACC,GACjBA,EAAMC,iBACNJ,GAAY,IAkBd,OAfAd,qBAAU,WACRmB,SAASC,iBAAiB,QAASL,GACnCI,SAASC,iBAAiB,cAAeJ,GAEzC,IAAMf,EAAUC,OAAOC,aAAY,WACjCS,EAxBN,WACE,IAAMS,EAAQ1B,KAAK2B,MAAMC,WAAWhB,OAAO,GAE3C,MAAM,SAAN,OAAgBc,GAqBCG,MACZ,MAEH,OAAO,WACLtB,OAAOM,cAAcP,GACrBkB,SAASM,oBAAoB,QAASV,GACtCI,SAASM,oBAAoB,cAAeT,MAE7C,IAGD,sBAAKN,UAAU,MAAf,UACE,6CACCG,GAAY,cAAC,EAAD,CAAOpB,UAAWA,QCrCrCiC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.812bc8f1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\ninterface Props {\n  clockName: string;\n}\n\nexport const Clock: React.FC<Props> = ({ clockName }) => {\n  const [time, setTime] = useState(new Date());\n  const [prevName, setPrevName] = useState(clockName);\n\n  useEffect(() => {\n    const timerId = window.setInterval(() => {\n      setTime(new Date());\n      // eslint-disable-next-line no-console\n      console.info(new Date().toUTCString().slice(-12, -4));\n    }, 1000);\n\n    return () => {\n      window.clearInterval(timerId);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (prevName !== clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed to ${clockName}`);\n      setPrevName(clockName);\n    }\n  }, [clockName]);\n\n  return (\n    <div className=\"Clock\">\n      <strong className=\"Clock__name\">\n        {clockName}\n      </strong>\n\n      <span>{' time is '}</span>\n\n      <span className=\"Clock__time\">\n        {time.toUTCString().slice(-12, -4)}\n      </span>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport const App: React.FC = () => {\n  const [clockName, setClockName] = useState('Clock-0');\n  const [hasClock, setHasClock] = useState(true);\n\n  const addClock = () => {\n    setHasClock(true);\n  };\n\n  const hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    setHasClock(false);\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', addClock);\n    document.addEventListener('contextmenu', hideClock);\n\n    const timerId = window.setInterval(() => {\n      setClockName(getRandomName());\n    }, 3300);\n\n    return () => {\n      window.clearInterval(timerId);\n      document.removeEventListener('click', addClock);\n      document.removeEventListener('contextmenu', hideClock);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n      {hasClock && <Clock clockName={clockName} />}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}